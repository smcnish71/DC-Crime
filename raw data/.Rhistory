}
}
#clean up variables
dataset$REPORT_DAT2<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %H:%M:%S %p")
head(dataset)
#clean up variables
dataset$REPORT_DAT2<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %H:%M:%S %P")
difftime(dataset[1,1],dataset[2,1], unites="minutes")
difftime(dataset[1,1],dataset[2,1], units="minutes")
difftime(dataset[1,19],dataset[2,19], units="minutes")
difftime(dataset[1,19],dataset[2,19], units="mins")
difftime(dataset[1,19],dataset[2,19], units="days")
dataset$REPORT_DAT2<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
head(dataset)
setwd("C:/Users/smcnish/Documents/Vizs/Crime/DC-Crime/raw data/")
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#clean up variables
dataset$REPORT_DAT<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$START_DATE<- as.POSIXlt(dataset$START_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$END_DATE<- as.POSIXlt(dataset$END_DATE, format = "%m/%d/%Y %I:%M:%S %p")
library(ggplot2)
library(dplyr)
dataset %>% group_by(REPORT_DAT) %>% summarise(count = count(PSA)) %>%
ggplot(aes(x = REPORT_DAT, y = count)) + geom_line()
head(dataset)
qplot(dataset$XBLOCK,dataset$YBLOCK)
qplot(dataset$XBLOCK,dataset$YBLOCK, color=WARD)
qplot(dataset$XBLOCK,dataset$YBLOCK, color=dataset$WARD)
qplot(dataset$XBLOCK,dataset$YBLOCK, color=dataset$VOTING_PRECINCT)
library(plyr)
count(dataset, "WARD")
dataset$year <- dataset$REPORT_DAT$year+1900  # years since 1900
count(dataset, "year")
dataset$day <- dataset$REPORT_DAT$mday        # day of month
dataset$month <- dataset$REPORT_DAT$mon+1     # month of year (zero-indexed)
ggplot(data=dataset, aes(x=yea, fill=OFFENSE)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=dataset, aes(x=year, fill=OFFENSE)) +
geom_bar(stat="count", position=position_dodge())
dataset$year <- as.factor(dataset$REPORT_DAT$year+1900)  # years since 1900
ggplot(data=dataset, aes(x=year, fill=OFFENSE)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=dataset, aes(x=year, fill=WARD)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=dataset, aes(x=year, fill=METHOD)) +
geom_bar(stat="count", position=position_dodge())
#filter out 2017
dataset[dataset$year != '2017',]
#filter out 2017
dataset<-dataset[dataset$year != '2017',]
ggplot(data=dataset, aes(x=year, fill=METHOD)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=dataset, aes(x=year, fill=OFFENSE)) +
geom_bar(stat="count", position=position_dodge())
dataset$month <- as.factor(dataset$REPORT_DAT$mon+1)
ggplot(data=dataset, aes(x=month, group=year)) +
geom_line() +
geom_point()
ggplot(data=dataset, aes(x=month, y=count, group=year)) +
geom_line() +
geom_point()
ggplot(data=dataset, aes(x=month, group=year)) +
geom_line(aes(fill=..count..)mstat="bin" +
geom_point()
ggplot(data=dataset, aes(x=month, group=year)) +
geom_line(aes(fill=..count..)mstat="bin"
ggplot(data=dataset, aes(x=month, group=year)) +
geom_line(aes(fill=..count..),stat="bin"
)
ggplot(data=dataset, aes(x=month, group=year)) +
geom_line(aes(fill=..count..),stat="count" )
ggplot(data=dataset, aes(x=month, group=year, color=year)) +
geom_line(aes(fill=..count..),stat="count" )
ggplot(data=dataset, aes(x=year, fill=OFFENSE)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=dataset, aes(x=REPORT_DAT)) +
geom_line(aes(fill=..count..),stat="count" )
ggplot(data=dataset, aes(x=year)) +
geom_line(aes(fill=..count..),stat="count" )
ggplot(data=dataset, aes(x=year, fill=WARD)) +
geom_bar(stat="count", position=position_dodge())
dataset$WARD <- as.factor(dataset$WARD)
ggplot(data=dataset, aes(x=year, fill=WARD)) +
geom_bar(stat="count", position=position_dodge())
count(dataset, "WARD"~"OFFENSE")
count(dataset,"OFFENSE")
qplot(dataset$XBLOCK,dataset$YBLOCK, color=dataset$WARD)
etwd("C:/Users/smcnish/Documents/Vizs/Crime/DC-Crime/raw data/")
library(ggplot2)
library(dplyr)
library(plyr)
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#clean up variables
dataset$REPORT_DAT<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$day <- dataset$REPORT_DAT$mday        # day of month
dataset$month <- as.factor(dataset$REPORT_DAT$mon+1)     # month of year (zero-indexed)
dataset$year <- as.factor(dataset$REPORT_DAT$year+1900)  # years since 1900
dataset$START_DATE<- as.POSIXlt(dataset$START_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$END_DATE<- as.POSIXlt(dataset$END_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$WARD <- as.factor(dataset$WARD)
#filter out 2017
dataset<-dataset[dataset$year != '2017',]
qplot(dataset$XBLOCK,dataset$YBLOCK, color=dataset$WARD)
count(dataset, "WARD")
ggplot(data=dataset, aes(x=year, fill=WARD)) +
geom_bar(stat="count", position=position_dodge())
ggplot(data=dataset, aes(x=month, group=year, color=year)) +
geom_line(aes(fill=..count..),stat="count" )
count(dataset, "OFFENSE")
dataset %>% head(10)
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(EPORT_DAT)
df_daily %>% head(10)
dataset$REPORT_DAT<- as.Date(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(EPORT_DAT)
df_daily %>% head(10)
}
#clean up variables
dataset$REPORT_DAT<- as.Date(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$day <- dataset$REPORT_DAT$mday        # day of month
dataset$month <- as.factor(dataset$REPORT_DAT$mon+1)     # month of year (zero-indexed)
dataset$year <- as.factor(dataset$REPORT_DAT$year+1900)  # years since 1900
dataset$START_DATE<- as.POSIXlt(dataset$START_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$END_DATE<- as.Date(dataset$END_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$WARD <- as.Date(dataset$WARD)
dataset$REPORT_DAT<- as.Date(dataset[,REPORT_DAT], format = "%m/%d/%Y %I:%M:%S %p")
#clean up variables
dataset[,REPORT_DAT]<- as.Date(dataset[,REPORT_DAT], format = "%m/%d/%Y %I:%M:%S %p")
#clean up variables
dataset$REPORT_DAT<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$day <- dataset$REPORT_DAT$mday        # day of month
dataset$month <- as.factor(dataset$REPORT_DAT$mon+1)     # month of year (zero-indexed)
dataset$year <- as.factor(dataset$REPORT_DAT$year+1900)  # years since 1900
dataset$START_DATE<- as.POSIXlt(dataset$START_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$END_DATE<- as.POSIXlt(dataset$END_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$WARD <- as.POSIXlt(dataset$WARD)
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
library(ggplot2)
library(dplyr)
library(plyr)
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#clean up variables
dataset$REPORT_DAT<- as.POSIXlt(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$day <- dataset$REPORT_DAT$mday        # day of month
dataset$month <- as.factor(dataset$REPORT_DAT$mon+1)     # month of year (zero-indexed)
dataset$year <- as.factor(dataset$REPORT_DAT$year+1900)  # years since 1900
dataset$START_DATE<- as.POSIXlt(dataset$START_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$END_DATE<- as.POSIXlt(dataset$END_DATE, format = "%m/%d/%Y %I:%M:%S %p")
#filter out 2017
dataset<-dataset[dataset$year != '2017',]
qplot(dataset$XBLOCK,dataset$YBLOCK, color=dataset$WARD)
count(dataset, "OFFENSE")
#ggplot(data=dataset, aes(x=year, fill=WARD)) +
#  geom_bar(stat="count", position=position_dodge())
#ggplot(data=dataset, aes(x=month, group=year, color=year)) +#
#  geom_line(aes(fill=..count..),stat="count" )
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
#clean up variables
dataset$REPORT_DAT<- as.Date(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
df_daily %>% head(10)
#clean up variables
dataset$REPORT_DAT<- as.Date(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$day <- dataset$REPORT_DAT$mday        # day of month
dataset$month <- as.factor(dataset$REPORT_DAT$mon+1)     # month of year (zero-indexed)
dataset$year <- as.factor(dataset$REPORT_DAT$year+1900)  # years since 1900
dataset$START_DATE<- as.Date(dataset$START_DATE, format = "%m/%d/%Y %I:%M:%S %p")
dataset$END_DATE<- as.Date(dataset$END_DATE, format = "%m/%d/%Y %I:%M:%S %p")
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
df_daily %>% head(10)
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
library(ggplot2)
library(plyr)
library(dplyr)
df_daily <- dataset %>%
group_by(REPORT_DAT) %>%
summarize(count = n()) %>%
arrange(REPORT_DAT)
df_daily %>% head(10)
library(ggplot2)
library(plyr)
library(dplyr)
setwd("C:/Users/smcnish/Documents/Vizs/Crime/DC-Crime/raw data/")
library(ggplot2)
library(plyr)
library(dplyr)
library(extrafont)
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#remove variables don't want
delme <- c("SHIFT","START_DATE","END_DATE","CCN")
dataset<- dataset[,-which(names(dataset) %in% delme)]
#clean up variables
dataset$REPORT_DAT <- strptime(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$date<- as.Date(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$DayofWeek <- weekdays(dataset$date)
dataset$hour <- substr(dataset$REPORT_DAT,12,13)     #hour
dataset$day <- substr(dataset$REPORT_DAT,9,10)    # day of month
dataset$month <- substr(dataset$REPORT_DAT,6,7)      # month of year
dataset$year <- substr(dataset$REPORT_DAT,1,4)     # year
#filter out 2017 because we only had a few dates
dataset<-dataset[dataset$year != '2017',]
#Create dataset of crime by day
df_daily <- dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(date) %>%
summarize(count = n()) %>%
arrange(date)
#Plot crime by day
ggplot(df_daily, aes(x = date, y = count)) +
geom_line(color = "#45b293", size = 0.1) +
geom_smooth(color = "#1A1A1A") +
scale_x_date(date_breaks="1 year", date_labels = ("%Y")) +
labs(x = "Date of Crime", y = "# of Crimes", title = "Daily Crimes in DC from 2008 – 2016") +
theme(text=element_text(size = 16,family="Courier New" ))
#summarize crime by day of the week and hour
df_time <- dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(DayofWeek, hour) %>%
summarize(count = n())
dow_format <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
hour_format <- c(paste(c(12,1:11),"AM"), paste(c(12,1:11),"PM"))
df_time$DayofWeek <- factor(df_time$DayofWeek, level = rev(dow_format))
df_time$Hour <- factor(df_time$hour, level = 0:23, label = hour_format)
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6), legend.title = element_blank(), legend.position="top", legend.direction="horizontal", legend.key.width=unit(2, "cm"), legend.key.height=unit(0.25, "cm"), legend.margin=unit(-0.5,"cm"), panel.margin=element_blank()) +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60")
#Plot crime by day
ggplot(df_daily, aes(x = date, y = count)) +
geom_line(color = "#45b293", size = 0.1) +
geom_smooth(color = "#1A1A1A") +
scale_x_date(date_breaks="1 year", date_labels = ("%Y")) +
labs(x = "Date of Crime", y = "# of Crimes", title = "Daily Crimes in DC from 2008 – 2016") +
theme(text=element_text(size = 16,family="Courier New" ))
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#append all 8 files together
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#remove variables don't want
delme <- c("SHIFT","START_DATE","END_DATE","CCN")
dataset<- dataset[,-which(names(dataset) %in% delme)]
#clean up variables
dataset$REPORT_DAT <- strptime(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$date<- as.Date(dataset$REPORT_DAT, format = "%m/%d/%Y %I:%M:%S %p")
dataset$DayofWeek <- weekdays(dataset$date)
dataset$hour <- substr(dataset$REPORT_DAT,12,13)     #hour
dataset$day <- substr(dataset$REPORT_DAT,9,10)    # day of month
dataset$month <- substr(dataset$REPORT_DAT,6,7)      # month of year
dataset$year <- substr(dataset$REPORT_DAT,1,4)     # year
#filter out 2017 because we only had a few dates
dataset<-dataset[dataset$year != '2017',]
#Create dataset of crime by day
df_daily <- dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(date) %>%
summarize(count = n()) %>%
arrange(date)
#Plot crime by day
ggplot(df_daily, aes(x = date, y = count)) +
geom_line(color = "#45b293", size = 0.1) +
geom_smooth(color = "#1A1A1A") +
scale_x_date(date_breaks="1 year", date_labels = ("%Y")) +
labs(x = "Date of Crime", y = "# of Crimes", title = "Daily Crimes in DC from 2008 – 2016") +
theme(text=element_text(size = 16,family="Courier New" ))
#summarize crime by day of the week and hour
df_time <- dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(DayofWeek, hour) %>%
summarize(count = n())
dow_format <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
hour_format <- c(paste(c(12,1:11),"AM"), paste(c(12,1:11),"PM"))
df_time$DayofWeek <- factor(df_time$DayofWeek, level = rev(dow_format))
df_time$Hour <- factor(df_time$hour, level = 0:23, label = hour_format)
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6), legend.title = element_blank(), legend.position="top", legend.direction="horizontal", legend.key.width=unit(2, "cm"), legend.key.height=unit(0.25, "cm"), legend.margin=unit(-0.5,"cm"), panel.margin=element_blank()) +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60")
head(df_time)
df_time %>% head(10)
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60")
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60") +
theme(text=element_text(size = 16,family="Courier New" ))
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60") +
theme(text=element_text(size = 13,family="Courier New" ))
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60") +
theme(text=element_text(size = 13,family="Courier New" ))
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60") +
theme(text=element_text(size = 12,family="Courier New" ))
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#27AE60") +
coord_fixed(ratio=1) +
theme(text=element_text(size = 12,family="Courier New" ))
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#1A1A1A") +
coord_fixed(ratio=1) +
theme(text=element_text(size = 12,family="Courier New" ))
ggplot(df_time, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Time of Arrest") +
scale_fill_gradient(low = "white", high = "#45b293") +
coord_fixed(ratio=1) +
theme(text=element_text(size = 12,family="Courier New" ))
#factor by crime category
df_top_crimes <- dataset %>%
group_by(OFFENSE) %>%
summarize(count = n()) %>%
arrange(desc(count))
#factor by crime category
df_top_crimes <- dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(OFFENSE) %>%
summarize(count = n()) %>%
arrange(desc(count))
df_top_crimes %>% head(20)
#factor by crime category
df_time_crime <- dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(OFFENSE, DayofWeek, hour) %>%
summarize(count = n())
df_time_crime$DayofWeek <- factor(df_time_crime$DayofWeek, level = rev(dow_format))
df_time_crime$Hour <- factor(df_time_crime$hour, level = 0:23, label = hour_format)
head(df_time_crime)
plot <- ggplot(df_time_crime, aes(x = hour, y = DayOfWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Offense and Time of Arrest") +
scale_fill_gradient(low = "white", high = "#45b293") +
facet_wrap(~ Category, nrow = 3)
ggplot(df_time_crime, aes(x = hour, y = DayOfWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Offense and Time of Arrest") +
scale_fill_gradient(low = "white", high = "#45b293") +
facet_wrap(~ Category, nrow = 3)
ggplot(df_time_crime, aes(x = hour, y = DayOfWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Offense and Time of Arrest") +
scale_fill_gradient(low = "white", high = "#45b293") +
facet_wrap(~ OFFENSE, nrow = 3)
ggplot(df_time_crime, aes(x = hour, y = DayofWeek, fill = count)) +
geom_tile() +
labs(x = "Hour of Crime", y = "Day of Week of Crime", title = "# of Police Arrests in DC from 2008 – 2016, by Offense and Time of Arrest") +
scale_fill_gradient(low = "white", high = "#45b293") +
facet_wrap(~ OFFENSE, nrow = 3)
head(df_time_crime)
df_time_crime
dataset[,-which(names(dataset) %in% c("REPORT_DAT"))] %>%
group_by(OFFENSE) %>%
summarize(count = n())
